apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: flask-app
  template:
    metadata:
      labels:
        app: flask-app
    spec:
      containers:
        - name: flask
          image: registry.access.redhat.com/ubi9/python-39
          # On installe Flask puis on lance une app inline (pas d'image custom n√©cessaire)
          # command:
          #   - /bin/sh
          #   - -lc
          #   - |
          #     python3 -m pip install --no-cache-dir --upgrade pip && \
          #     python3 -m pip install --no-cache-dir flask && \
          #     python3 - <<'PY'
          #     from flask import Flask
          #     app = Flask(__name__)
          #     @app.route('/')
          #     def home():
          #         return '<h1>Hello Flask V1</h1>'
          #     app.run(host='0.0.0.0', port=8080)
          #     PY
          command:
            - /bin/sh
            - -lc
            - |
              python3 -m pip install --no-cache-dir --upgrade pip && \
              python3 -m pip install --no-cache-dir flask && \
              python3 - <<'PY'
              from flask import Flask, jsonify
              app = Flask(__name__)
              @app.route('/')
              def home():
                  return '<h1>Hello Flask V2</h1>'
              @app.route('/status')
              def status():
                  return jsonify(status='running', version='V2')
              app.run(host='0.0.0.0', port=8080)
              PY
          ports:
            - containerPort: 8080

